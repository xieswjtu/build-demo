// 写一个方法判断文件后缀是否为图片类型，正则
const imageRegex = /\.(jpg|jpeg|png|gif|bmp|svg)$/i;


// 正则表达式中，某些字符具有特殊意义（如匹配任意字符、开始、结束等）。
// 为了让这些字符在表达式中表示它们的字面含义（即匹配自身），需要对它们进行转义。转义通常通过在字符前添加反斜杠 \ 来实现。
// 以下是正则表达式中常见的需要转义的字符及其含义：
// 1. 常见的特殊字符及其转义
// . (点号): 默认表示“任意单个字符”。转义为 \. 表示匹配实际的点号字符。
// ^ (脱字符): 在字符集之外使用表示字符串的开头。在字符集内 [] 使用时表示字符集的补集。转义为 \^ 后，表示匹配实际的脱字符。
// $ (美元符号): 表示字符串的结尾。转义为 \$ 后，表示匹配实际的美元符号字符。
// * (星号): 表示前面的字符或表达式可以匹配零次或多次。转义为 \* 后，表示匹配实际的星号字符。
// + (加号): 表示前面的字符或表达式可以匹配一次或多次。转义为 \+ 后，表示匹配实际的加号字符。
// ? (问号): 表示前面的字符或表达式可以匹配零次或一次，或者用于非贪婪匹配。转义为 \? 后，表示匹配实际的问号字符。
// {} (花括号): 用于指定匹配次数。转义为 \{ 和 \} 后，表示匹配实际的花括号。
// [] (方括号): 表示字符集。转义为 \[ 和 \] 后，表示匹配实际的方括号。
// () (圆括号): 表示捕获组。转义为 \( 和 \) 后，表示匹配实际的圆括号。
// | (竖线): 表示逻辑“或”操作符。转义为 \| 后，表示匹配实际的竖线。
// / (斜杠): 在一些编程语言（如 JavaScript）中，正则表达式通常用斜杠包裹。
// 如果你在字符串中需要表示正则表达式中的斜杠，它通常需要被转义为 \/。在正则表达式中直接使用 / 是可能的，但在某些上下文中（如嵌入字符串中）需要转义。